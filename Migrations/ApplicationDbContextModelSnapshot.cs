// <auto-generated />
using System;
using InvoiceApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InvoiceApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("InvoiceApp.Models.LtCourierFee", b =>
                {
                    b.Property<int>("WeightID")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("CourierID")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int?>("EndKg")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("StartKg")
                        .HasColumnType("int");

                    b.HasKey("WeightID", "CourierID");

                    b.HasIndex("CourierID");

                    b.ToTable("ltcourierfee");
                });

            modelBuilder.Entity("InvoiceApp.Models.MsCourier", b =>
                {
                    b.Property<int>("CourierID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CourierID"));

                    b.Property<string>("CourierName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("CourierID");

                    b.ToTable("mscourier");
                });

            modelBuilder.Entity("InvoiceApp.Models.MsPayment", b =>
                {
                    b.Property<int>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PaymentID"));

                    b.Property<string>("PaymentName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("PaymentID");

                    b.ToTable("mspayment");
                });

            modelBuilder.Entity("InvoiceApp.Models.MsProduct", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ProductID"));

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<float>("Weight")
                        .HasColumnType("float");

                    b.HasKey("ProductID");

                    b.ToTable("msproduct");
                });

            modelBuilder.Entity("InvoiceApp.Models.MsSales", b =>
                {
                    b.Property<int>("SalesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("SalesID"));

                    b.Property<string>("SalesName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("SalesID");

                    b.ToTable("mssales");
                });

            modelBuilder.Entity("InvoiceApp.Models.TrInvoice", b =>
                {
                    b.Property<string>("InvoiceNo")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<decimal>("CourierFee")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("CourierID")
                        .HasColumnType("int");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InvoiceTo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.Property<int>("SalesID")
                        .HasColumnType("int");

                    b.Property<string>("ShipTo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("InvoiceNo");

                    b.HasIndex("CourierID");

                    b.HasIndex("PaymentType");

                    b.HasIndex("SalesID");

                    b.ToTable("trinvoice");
                });

            modelBuilder.Entity("InvoiceApp.Models.TrInvoiceDetail", b =>
                {
                    b.Property<string>("InvoiceNo")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnOrder(0);

                    b.Property<int>("ProductID")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<short>("Qty")
                        .HasColumnType("smallint");

                    b.Property<float>("Weight")
                        .HasColumnType("float");

                    b.HasKey("InvoiceNo", "ProductID");

                    b.HasIndex("ProductID");

                    b.ToTable("trinvoicedetail");
                });

            modelBuilder.Entity("InvoiceApp.Models.LtCourierFee", b =>
                {
                    b.HasOne("InvoiceApp.Models.MsCourier", "Courier")
                        .WithMany("CourierFees")
                        .HasForeignKey("CourierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Courier");
                });

            modelBuilder.Entity("InvoiceApp.Models.TrInvoice", b =>
                {
                    b.HasOne("InvoiceApp.Models.MsCourier", "Courier")
                        .WithMany("Invoices")
                        .HasForeignKey("CourierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InvoiceApp.Models.MsPayment", "Payment")
                        .WithMany("Invoices")
                        .HasForeignKey("PaymentType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InvoiceApp.Models.MsSales", "Sales")
                        .WithMany("Invoices")
                        .HasForeignKey("SalesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Courier");

                    b.Navigation("Payment");

                    b.Navigation("Sales");
                });

            modelBuilder.Entity("InvoiceApp.Models.TrInvoiceDetail", b =>
                {
                    b.HasOne("InvoiceApp.Models.TrInvoice", "Invoice")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("InvoiceNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InvoiceApp.Models.MsProduct", "Product")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("InvoiceApp.Models.MsCourier", b =>
                {
                    b.Navigation("CourierFees");

                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("InvoiceApp.Models.MsPayment", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("InvoiceApp.Models.MsProduct", b =>
                {
                    b.Navigation("InvoiceDetails");
                });

            modelBuilder.Entity("InvoiceApp.Models.MsSales", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("InvoiceApp.Models.TrInvoice", b =>
                {
                    b.Navigation("InvoiceDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
